# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

require "../fastlane/lib/config.rb"

Keys = Config::Keys
Options = Config::Options

desc "Create a signed IPA package"
private_lane :ios_create_ipa do |options|
  flavor = options[Options::FLAVOR]
  flavorConfig = Config::IOS_BUILD_CONFIG[flavor]
  isAdhoc = flavorConfig[Keys::ADHOC]
  provisioning_profile_path = flavorConfig[Keys::PROVISIONING_PROFILE_PATH]
  provisioning_profiles = flavorConfig[Keys::PROVISIONING_PROFILES]

  UI.user_error!("No PROVISIONING_PASSWORD provided!") unless ENV.key?("PROVISIONING_PASSWORD")

  begin
    delete_keychain(name: "fastlane_tmp_keychain-db")
  rescue Exception
  end
  create_keychain(
    name: "fastlane_tmp_keychain-db",
    default_keychain: is_ci ? true : false,
    unlock: true,
    timeout: 0,
    lock_when_sleeps: false,
    password: "",
  )
  if is_ci
    setup_ci(force: true)
  end

  import_certificate(
    certificate_path: "profiles/Certificates.p12",
    certificate_password: ENV["PROVISIONING_PASSWORD"],
    keychain_name: "fastlane_tmp_keychain-db",
    keychain_password: "",
  )

  install_provisioning_profile(
    path: provisioning_profile_path,
  )

  filePath = build_app(scheme: "Runner",
            configuration: "Release",
            workspace: "Runner.xcworkspace",
            export_method: isAdhoc ? "ad-hoc" : "app-store",
            export_options: {
              "uploadBitcode" => false,
              "provisioningProfiles" => provisioning_profiles,
            },
            include_bitcode: false,
            skip_profile_detection: true,
            output_directory: "../build/",
            output_name: "app.ipa")
  begin
    delete_keychain(name: "fastlane_tmp_keychain-db")
  rescue Exception
  end

  options[:ios_create_ipa] = filePath
end
